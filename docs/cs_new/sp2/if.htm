<section class="Post" data-icon="warn.svg">
    <h2>Important!</h2>
    <p>Use only programming techniques that have been covered in these lessons. Examples that you find on the web often use
    techniques that are considered bad programmming practice that should be avoided. In particular, do not use the <code>break</code>
    or <code>continue</code> statements or the <code>exit</code> function, and do not use “infinte loops” that start with
    <code>while True</code>.</p>
</section>

<section class="Post" data-icon="python">
<h2 class="Collapse">The <code>if</code> Statement</h2><div class="Collapse Expand">
<p>Algorithms often involve “branching”, where the answer to a True/False decision determines which
	instructions will be executed.  Python uses an <code>if-elif-else</code> structure to achieve branching.</p>

<pre data-echo="s11_ex1.py" data-title="1" class="Code">from math import sqrt

num = float(input("Please enter a number: "))
<span class="Blue">if num >= 0:</span>
    root = sqrt(num)
    print(f"The square root of {num} is {root}.")</pre>

<p>The <code>if</code> keyword is followed by a Boolean expression (i.e. an expression that is either
	<code>True</code> or <code>False</code>) and then a colon (<code>:</code>). Python will only execute the indented block following the
	<code>if</code> when the result is <code>True</code>. Standard indentation in Python is <b>four</b> spaces.</p>

<p>In the program above, the <code>sqrt</code> function will raise an exception (error) and crash the
	program if it attempts to calculate the square root of a negative number. The <code>if</code> statement
	checks whether the number provided is non-negative before calling <code>sqrt</code>. If a negative
	number is entered, Python will not run the indented statements.</p>
</div></section>

<section class="Post" data-icon="python">
<h2 class="Collapse">The <code>else</code> and <code>elif</code> Statements</h2>
<div class="Collapse Expand">
<p>The <code>if</code> block can be followed by an <code>else</code> block to specify instructions that
	are executed when the condition is <code>False</code>.</p>

<pre data-echo="s11_ex2.py" data-title="1" class="Code">from math import sqrt

num = float(input("Please enter a number: "))
<span class="Blue">if num >= 0:</span>
    root = sqrt(num)
    print(f"The square root of {num} is {root}.")
<span class="Blue">else:</span>
    print("The number cannot be negative!")</pre>

<p>When there are more than two possible conditions, you can use the <code>elif</code> (“else if”)
	keyword to specify additional tests.</p>

<pre data-echo="s11_ex3.py" data-title="1" class="Code">age = float(input("Please enter your age: "))
<span class="Blue">if age < 12:</span>
    print("You are too young to be admitted to this movie!")
<span class="Blue">elif age < 18:</span>
    print("You must be accompanied by an adult!")
<span class="Blue">else:</span>
    print("Enjoy the show!")</pre>
</div></section>

<section class="Post" data-icon="ide">
<h2 class="Collapse">Assignment</h2>
<div class="Collapse Expand"><ol class="Assign">
<li><p class="NoTop">When you borrow money from a bank, you will often need to repay the loan by making monthly
    payments. The amount of the monthly payment needs to be more than the amount of interest that the
    bank charges you. Write a program <code>s11_loan.py</code> that asks the user to enter the loan
    amount, the annual interest rate, and the monthly payment. Your program should then calculate the
    monthly interest and say whether or not the payment is big enough.</p>
<p>The monthly interest is calculated by converting the interest from a percent to a decimal, (<code>5 / 100 = 0.05</code>),
    then multiplying by the loan amount (<code>0.05 * 5000 = 250</code>), and finally dividing by 12 to get the monthly amount
    (<code>250 / 12 = 20.83</code>). Use variables to make your program do the calculations correctly for any values that the
    user inputs.</p><p>Here is a sample session...</p>
</li>
<pre data-echo="q1.io" class="Code">Loan amount in $: <span class="Blue">5000</span>
Annual interest in %: <span class="Blue">5</span>
Monthly payment in $: <span class="Blue">10</span>

The monthly interest charge is $20.83.
Your payment is not enough!</pre>

<li>In a game of “Rock, Paper, Scissors” the winner is determined by the following rules:
<ul>
    <li>Rock beats Scissors</li>
    <li>Scissors beats Paper</li>
    <li>Paper beats Rock</li>
</ul>
<p>The Python program <code>s11_rock.py</code> uses the <code>randint</code> function to choose a number between 1 and 3
for each player. The three numbers correspond to the three choices Rock (1), Paper (2), or Scissors (3).</p>

<p>Complete the program so that it displays each player’s choices as a string (i.e. it should print
the word “Rock” and not the number 1). It should also determine which player wins (or if it is a
draw) and output the result.</p>
<p>Hint: To determine the winner first check if it’s a tie. Then, if it is <em>not</em> a tie check if player 1 wins. If neither
of these is the case, you can conclude that player 2 wins without having to check anything else!</p>
<p>The output should look something like this...</p>
</li>
<pre data-echo="q2.io" class="Code">Player 1 chose Paper.
Player 2 chose Rock.
Player 1 wins!</pre>
</ol>

</div></section>

<script type="text/javascript">

loadFeed.data = {
    title: "Conditional Statements",
    up: "cs_new/sp2/home",
    next: "cs_new/sp2/while",
    prev: "cs_new/sp2/bool",
}
  
</script>
