<section class="Post" data-icon="sc8pr">
<h2 class="Collapse">Graphics in Python 3</h2><div class="Collapse Expand">
<p>Writing computer games or other graphics-based programs in Python 3 usually requires a third-party graphics package.
    We will be using the <a href="https://dmaccarthy.github.io/sc8pr" target="sc2" class="Code">sc8pr</a> package
    which is based on <a href="https://www.pygame.org" target="pyg" class="Code">pygame</a>. You will need both <code>pygame</code> and <code>sc8pr</code> installed for programs to work.</p>
<p>If you are using <a target="Th" href="https://thonny.org/">Thonny</a> as an IDE, go to the “Tools” menu and open the “Manage Packages…” dialog. Scroll through the alphabetical list of installed packages to see if <code>pygame</code> and <code>sc8pr</code> are installed. If these packages have <em>not</em> been installed, follow these instructions:</p>
<p class="Center"><img src="cs_new/sp1/img/thonny.png" data-aspect="644/464" alt="Thonny"/></p>
<ol>
    <li>Type the name of the software package, <code>sc8pr</code>.</li>
    <li>Click the button to search the Python Package Index (PyPI).</li>
    <li>Click the three dots.</li>
    <li>Select the desired version: <code>3.0.4</code>.</li>
    <li>Check “Upgrade Dependencies” and then click the Install button.</li>
</ol>

<!-- <p>If you are using <a class="Code" target="repl" href="https://replit.com">replit</a>, the built-in package manager should recognize programs that require these packages
    and install them automatically. You may need to click the Packages Tool to specify the appropriate versions of the software; this tutorial assumes <code>sc8pr 3.0</code> and <code>pygame 2.x</code>.</p> -->
<!-- <p>If you are not using Thonny, you can run the following command in a terminal. You may need to run it as an administrator.</p>
<pre class="IO">pip3 install -U sc8pr==3.0</pre>
<p>There may be different ways to invoke the <code>pip3</code> command depending on what operating system you are using and how the Python environment is configured. For example, if Windows does not recognize the <code>pip3</code> command, try:</p>
<pre class="IO">py -3 -m pip install -U sc8pr==3.0</pre>
<p>Installing <code>sc8pr</code> should install <code>pygame</code> automatically on most platforms.</p>

<p>Before you continue, login to <a target="repl" href="https://replit.com/">replit</a> and open your <code>CS20-2024</code> repl. Complete the coding assignments in this repl.
    Be sure to invite your teacher (<span class="Var">email</span>) as a collabortor for your repl if you have not already done so.</p> -->
</div></section>

<section class="Post" data-icon="sc8pr">
<h2 class="Collapse">Sketch</h2><div class="Collapse Expand">
<p>Interactive animations are known as <em class="Defn">sketches</em> in <code>sc8pr</code>. This terminology is borrowed from a computer programming language called <a target="Pro" href="https://processing.org/">Processing</a>, where programs are called sketchbooks. When writing a <code>sc8pr</code> animation, your main program will often look like this...</p>
<pre class="Code" data-echo="py">Sketch().play()  <span class="Comment"># Create and then play a sketch!</span></pre>
<p>The <code>Sketch</code> function is used to create your animation and the <code>play</code> method, as you might expect, plays it. You will need to write a <code>setup</code> function to control the sketch.</p>
<p>Suppose you want to create a simple sketch that just displays an image. You can do this by having your <code>setup</code> function load an image file and assign it as the sketch’s background (<code>sk.bg</code>). Here is the complete program...</p>
<pre class="Code" data-echo="v01_ex1.py" data-title="1">from sc8pr import Sketch, Image

<span class="Blue">def setup(sk):
    <span class="DocString">"Display an image as the sketch background"</span>
    sk.bg = Image("img/sky.png")</span>

<span class="Comment"># Play the sketch</span>
Sketch().play()</pre>

<p>Note that <code>Sketch</code> is the name of the <em>function</em> that creates your sketch, while <code>sk</code> is the <em>variable</em> that refers to your sketch object after it has been created.
    For this program to work, you must have an image file named <code>sky.png</code> saved in the <code>img</code> subfolder of the folder where your Python source code is.</p>
<p>You can also use a solid colour as a background instead of an image...</p>
<pre class="Code" data-echo="v01_ex2.py" data-title="1">from sc8pr import Sketch

def setup(sk):
    <span class="DocString">"Display the sketch with a blue background"</span>
    <span class="Blue">sk.bg = "blue"</span>

<span class="Comment"># Play the sketch</span>
Sketch().play()</pre>
</div></section>

<section class="Post" data-icon="sc8pr">
<h2 class="Collapse">Sprites</h2><div class="Collapse Expand">
<p>In games programming, a <em class="Defn">sprite</em> is a character or object that is able to interact with the player and with other sprites. For example, in a “Space Invaders” type game, the invading spaceships, the player’s spaceship, and the missiles that these ships fire would all be sprites.</p>
<p>The <code>sc8pr</code> package includes a <code>Sprite</code> function that you can call when you want to add a sprite to your sketch. Sprites are created from image files and you must pass the name of the file as an argument, just like we did with the background image in the previous example.</p>
<p>Here is the complete program...</p>
<pre class="Code" data-echo="v01_ex3.py" data-title="1">from sc8pr import Sketch, Image
from sc8pr.sprite import Sprite

def setup(sk):
    <span class="DocString">"Create a background and a single sprite"</span>
    sk.bg = Image("img/sky.png")
    <span class="Blue">sk += Sprite("img/alien.png")</span>

<span class="Comment"># Play the sketch</span>
Sketch().play()</pre>
</div></section>

<section class="Post" data-icon="sc8pr">
<h2 class="Collapse">Sprite Properties</h2><div class="Collapse Expand">
<p>When you create a sprite, you can call its <code>config</code> method to provide optional arguments that set the sprite’s properties. For example, you could change the last line of the setup function above to the following...</p>
<pre class="Code" data-echo="py">sk += Sprite("img/alien.png").<span class="Blue">config(spin=2)</span></pre>

<p>This would cause the sprite to spin clockwise at 2 degrees per frame. The animation tries to run at 60 frames per second (if your computer is fast enough), so this works out to 120 degrees per second, or 3 seconds for the sprite to spin completely around.</p>
<p>In addition to the <code>spin</code> property, you might want to use the <code>size</code>, <code>width</code>, or <code>height</code> properties to set the size of the sprite.
    If you want to resize the image without stretching it, use <em>either</em> the <code>width</code> or the <code>height</code> keyword; <code>sc8pr</code> will automatically calculate the other dimension...<p>
<pre class="Code" data-echo="py">sk += Sprite("img/alien.png").<span class="Blue">config(width=50)</span></pre>

<p>It is usually better to specify your desired size relative to the size of the sketch. For example, if you want the height of the sprite to be one-tenth of the height of the sketch...</p>
<pre class="Code" data-echo="v01_ex4.py" data-title="1">from sc8pr import Sketch, Image
from sc8pr.sprite import Sprite

def setup(sk):
    <span class="DocString">"Create a background and a single sprite"</span>
    sk.bg = Image("img/sky.png")
    <span class="Blue">h = sk.height / 10</span>
    sk += Sprite("img/alien.png").config(height=h, spin=2)

<span class="Comment"># Play the sketch</span>
Sketch().play()</pre>
</div></section>

<section class="Post" data-icon="sc8pr">
<h2 class="Collapse">Pixel Coordinates</h2><div class="Collapse Expand">
<p>In computing, graphical images consist of a large number of “picture elements”, or <em class="Defn">pixels</em>. Each pixel is a small square of uniform colour; the image is formed by drawing the individual pixels in the correct sequence.</p>
<p>Each pixel can be identified by a pair of coordinates. The upper left pixel of an image, window, or screen, has coordinates (0, 0). The pixel immediately to its right has coordinates (1, 0), while the pixel immediately below is (0, 1). The first (“x”) coordinate describes the pixel’s <em>horizontal</em> position while the second (“y”) coordinate describes the <em>vertical</em> position. For an image that is 64 pixels wide and 48 pixels high, the lower right pixel would have coordinates (63, 47).</p>
<p>You can use your sketch’s pixel coordinates to position your sprites. In the examples above, the sprite was positioned by default at the top left corner of the sketch. The following statement would create the sprite positioned 200 pixels to the right and 100 pixels down from the sketch’s upper left...</p>
<pre class="Code" data-echo="py">sk += Sprite("img/alien.png").config(<span class="Blue">pos=(200,100)</span>)</pre>

<p>Again, it is usually preferable to calculate the position in terms of the sketch’s width and height...</p>
<pre class="Code" data-echo="py"><span class="Blue">x</span> = sk.width / 4
<span class="Blue">y</span> = sk.height / 4
sk += Sprite("img/alien.png").config(<span class="Blue">pos=(x,y)</span>)</pre>

<p>You can set the sprite’s velocity (<code>vel</code>) to set it in motion. The statement below will create the sprite so that it moves 2 pixels right and 1 pixel up each frame.</p>
<pre class="Code" data-echo="py">sk += Sprite("img.alien.png").config(<span class="Blue">vel=(2,-1)</span>)</pre>

<p>You can also tell the sprite to “bounce” or “wrap” when it reaches the edge of the sketch...</p>
<pre class="Code" data-echo="py">sk += Sprite("img/alien.png").config(vel=(2,-1), <span class="Blue">bounce=BOTH</span>)</pre>

<p>You can also specify different edge behaviours for the horizontal and vertical edges...</p>
<pre class="Code" data-echo="py">sk += Sprite("img/alien.png").config(vel=(2,-1),
    <span class="Blue">bounce=HORIZONTAL, wrap=VERTICAL</span>)</pre>

<p>Note that the constants <code>BOTH</code>, <code>HORIZONTAL</code>, and <code>VERTICAL</code> need to be imported before you can use them. Here is the complete program...</p>
<pre class="Code" data-echo="v01_ex5.py" data-title="1">from sc8pr import Sketch, Image, VERTICAL, HORIZONTAL
from sc8pr.sprite import Sprite

def setup(sk):
    <span class="DocString">"Create a background and a single sprite"</span>
    sk.bg = Image("img/sky.png")
    h = sk.height / 10
    sk += Sprite("img/alien.png").config(spin=2,
        height=h, vel=(2,-1), pos=sk.center,
        bounce=HORIZONTAL, wrap=VERTICAL)

<span class="Comment"># Play the sketch</span>
Sketch().play()</pre>
</div></section>

<section class="Post" data-icon="thonny">
<h2 class="Collapse">Assignment</h2><div class="Collapse Expand">
<ol class="Assign">
<li>Create a <code>sc8pr</code> animation as <code>v01_animation.py</code>. Your animation should display a background and draw a minimum of two of your sprites.
    Have the sprites exhibiting some sort of motion and edge behaviour. (Make it different from the examples above!)
    If you did not create the image files yourself, include comments in your source file giving the URL(s) from where you obtained your images and the license under which you are using the images.</li>
<li>Make a copy of this <a href="https://docs.google.com/document/d/1Up-3Le1NqnnyXAgPiqQw9yvM7LSc3NyVGboVMMg558Q" target="GDoc">Google Doc</a> in your <code>CS20</code> folder and share it with your teacher. Edit the document to create a plan for your Game Design Project.</li>

</ol>
</div></section>

<script type="text/javascript">

loadFeed.data = {
    title: "Sketches & Sprites",
    up: `cs_new/game/home`,
    next: "cs_new/game/custom",
}
  
</script>
