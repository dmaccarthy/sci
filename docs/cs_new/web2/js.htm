<section class="Post" data-icon="html5.svg">
<h2 class="Collapse">JavaScript</h2><div class="Collapse Expand">

<p><em Class="Defn">JavaScript</em> (also call ECMAScript) is a programming language that is used to make HTML
	documents interactive. The JavaScript interpreter is built into your web browser.</p>

<p>In the example below, the <code>&lt;p&gt;</code> element has an <code>onclick</code> attribute;
	the value of this attribute contains a JavaScript instruction that the browser will execute
	when the user clicks on the paragraph. In this example, the JavaScript instruction is
	<code>alert('Hello!')</code>. This causes a message box to appear with the message
	‘Hello!’</p>

<pre class="Code" contenteditable="true" data-echo="html">
&lt;p onclick = "<span class="Blue">alert('Hello!')</span>"&gt;Click Me!&lt;/p&gt;</pre>

<p>In addition to the <code>onclick</code> attribute, there are several other attribute
	names that you can use to attach to JavaScript code to <em class="Defn">events</em> that
	occur in the browser. Some of these include <code>onmouseover</code> and
	<code>onmouseout</code>. In the example below, JavaScript is used to change the
	<code>&lt;img&gt;</code> element’s CSS. The variable name <code>this</code> refers to the HTML
	element (<code>&lt;img&gt;</code>), and <code>this.style</code> refers to the element’s CSS
	styles.</p>

<pre class="Code" contenteditable="true" data-echo="html">
&lt;p onclick = "alert('Hello!')"&gt;
  &lt;img
    src = "https://sci-davidmaccarthy.replit.app/media/laptop.svg"
    alt = "Laptop"
    width = "128"
    <span class="Blue">onclick = "this.style.display='none'"
    onmouseover = "this.style.width='192px'"
    onmouseout = "this.style.width='96px'"</span> /&gt;
&lt;/p&gt;</pre>

</div></section>

<section class="Post" data-icon="html5.svg">
<h2 class="Collapse">Functions</h2><div class="Collapse Expand">

<p>Just like in Python, JavaScript allows you to define <em>functions</em> to perform
	specific tasks. If you want your webpage to execute more than a single JavaScript
	instruction, you can define a function within a <code>&lt;script&gt;</code> tag (usually located
	in your document <code>&lt;head&gt;</code>.)</p>

<pre class="Code" contenteditable="true" data-echo="html">
&lt;head&gt;
&lt;script type="text/javascript"&gt;

<span class="Blue">function myAction(elem) {
  let pad = parseInt(prompt("How much padding?"));
  elem.style.padding = pad + "px";
  elem.style.border = "2px solid blue";
  document.getElementById("Laptop").style.width = "192px";
}</span>

&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p onclick = "<span class="Blue">myAction(this)</span>"&gt;
  &lt;img id = "Laptop"
    alt = "Laptop"
    width = "128"
    src = "https://sci-davidmaccarthy.replit.app/media/laptop.svg"/&gt;
&lt;/p&gt;
&lt;/body&gt;</pre>

<p>Note that JavaScript has its own syntax and vocabulary which are different than Python’s.
	JavaScript instructions end with a semi-colon. JavaScript uses curly brackets rather than
	indentation to group statements into blocks. (It is still good form to indent as in Python,
	but the interpreter considers this to be optional.) JavaScript uses the <code>function</code> keyword
	to define a function rather then Python’s <code>def</code>. Built-in functions are named
	differently: <code>prompt</code> instead of <code>input</code> and <code>parseInt</code> instead
	of <code>int</code>. The keyword <code>let</code> is used when a new variable is first defined.</p>

<p>There are many <a href="https://www.w3schools.com/js/default.asp">JavaScript tutorials</a> available on the web.</p>
   
</div></section>

<section class="Post" data-icon="replit">
<h2 class="Collapse">Assignment</h2><div class="Collapse Expand">
<ol class="Assign">
	<li>Create <code>x05_Tuscany.html</code> and <code>x05_Tuscany.css</code> by copying the corresponding files from the previous assignment.
		Use CSS to make the <code>article</code> containing the Specials hidden. Use JavaScript to
		add a control that the user can click to make the Specials appear, and another control
		they can use to hide the Specials again.</li>
</ol>
</div></section>

<script type="text/javascript">

loadFeed.data = {
    title: "JavaScript",
    up: "cs_new/web2/home",
    prev: "cs_new/web2/div"
}
  
</script>
