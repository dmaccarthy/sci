<section class="Post" data-icon="simulation">
<h2 class="Collapse">Simulation</h2><div class="Collapse Expand">
    <p class="Center"><span class="TeX">m</span> / kg = <span id="CalcMass"></span> × 10<sup>–9</sup> [<span class="TeX">v</span> / (m/s)]<sup>1.5</sup></p>
    <p class="Center"><svg id="OilDropSim"></svg></p>
    <p class="Center"><span id="Volts"></span> V ⌚ <span id="Timer">0.00</span> s</p>
    <p class="Center"><input id="Voltage" type="range" min="0" max="2000" step="1" value="0"
        style="width: 16em" oninput="loadFeed.sim.drawE()"/></p>
</div>

<script type="text/javascript" data-init="sim">

loadFeed.sim = () => {
    let e = $("#OilDropSim").attr({width: 302, height: 602, "data-aspect": "302/602"});
    let svg = new SVG_Animation(e, -1.5, 1.5, 0, 6, 1);

    // Draw and label the ruler
    let g = svg.group().css({fill: "none", stroke: "#0065FE", "stroke-width": "1px"});
    svg.rect([1.6, 6], [0, 3], g).css({fill: "#F4F4FF"});
    let t = svg.group().css({fill: "#0065FE", "font-size": "20px"});
    for (let i=1; i<30; i++) {
        let y = i / 5;
        let mm = i % 5 == 0;
        svg.line([0.8, y], [0.8 - (mm ? 1 : 0.7), y], g);
        if (mm) svg.text(y, [-0.5, y], t);
    }
    svg.text("mm", [-0.5, 0.1], t);

    // Randomize terminal speed coefficient
    let c = loadFeed.sim.coeff = uniform(2.5, 3.5);
    $("#CalcMass").html(c.toFixed(2));

    // Finalize drawing
    let drops = svg.group();
    svg.final();

    svg.beforeupdate = function() {
        // Look up voltage and create new oil drops
        let V = $("#Voltage").val();
        loadFeed.sim.field = V / 0.006;
        $("#Volts").html(V);
        let n = svg.items.length;
        let p = 1 - n / 8;
        if (Math.random() < p / 40) {
            loadFeed.sim.drop(drops);
        }
    }

    svg.$.on("click", () => {
        $("#Voltage").val(0);
        loadFeed.sim.drawE();
        $("#Timer").html(svg.time.toFixed(2));
        svg.time = 0;
    });

    // Run the animation
    svg.play();
}

loadFeed.sim.drop = (g) => {
    // Create a new oil drop
    let term = uniform(0.1, 0.8) / 1000;
    let m = loadFeed.sim.coeff / 1e9 * Math.pow(term, 1.5);
    let r = Math.pow(m * 1e14, 0.33) / 35;
    let q_m = (1 + randint(12)) * 1.602e-19 / m;
    // console.log(m, m*q_m/qe, term);
    let circ = g.svg.circle(r, [uniform(-0.25, 1.5 - r), 6], g);

    circ.onupdate = function() {
        let y = this.position[1];
        if (y > 6 + r || y < -r) // Remove drop when it leaves the screen
            this.final(1);
        else { // Recalculate droplet velocity
            let v = (q_m * loadFeed.sim.field - 9.81) / 9.81;
            let sign = v < 0 ? -1 : 1;
            v = sign * term * Math.pow(sign * v, 0.67);
            this.config({vel: [0, 1000 * v]});
        }
    }
}

loadFeed.sim.drawE = () => {
    $('#Timer').html('0.00');
    let svg = $("#OilDropSim")[0].graphic;
    if (svg.efield) {
        svg.efield.final(2);
        delete svg.efield;
    }
    let E = $("#Voltage").val() / 1000;
    if (E) {
        let g = svg.efield = svg.group().css({fill: "red"});
        let opt = {tail: E < 0.56 ? null : "8"};
        svg.arrow([-1, 3 + E], [-1, 3 - E], opt, g).css({stroke: "black"});
        svg.symbol("E", {vec:1}, [-1.25, 3], g).update(0);
    }
}

</script>
</section>

<section class="Post" data-icon="slides">
<h2 class="Collapse">Lesson Notes<span data-print="LessonNotes"></span></h2><div class="Collapse">
<div id="LessonNotes">

<section class="Slide Center">
<h1 id="Title">?</h1>
<!-- <p class="Present"><img src="" class="s24" alt="Picture"/></p> -->
</section>

<section class="Slide"><h3>?</h3>
</section>

</div></div></section>

<section class="Post" data-answers="1" data-icon="correct">
<h2 class="Collapse">Practice<span data-print="Practice"></span></h2><div class="Collapse">
<div id="Practice">

<ol></ol>

</div></div></section>

<section class="Post" data-answers="1" data-icon="correct">
<h2 class="Collapse">Review<span data-print="Practice"></h2><div class="Collapse">
<div id="Review">
<ol>
</ol>
</div></div></section>

<script type="text/javascript">

loadFeed.data = {
    title: `${siteData.lesson}?.? — Millikan’s Oil Drop Experiment`,
    answerDate: "2025.2.?.16",
    num: "?.?",
    up: "p30/units/B",
    // prev: "p30/",
    // next: "p30/mom",
}

</script>